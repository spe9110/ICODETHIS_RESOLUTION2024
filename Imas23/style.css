@import url("https://fonts.bunny.net/css2?family=Lato:wght@400;700&display=swap");

*,
*::before,
*::after {
	box-sizing: border-box;
}

:root,
[data-theme="light"] {
	--color-text-1: #333;
	--color-text-2: #777;
	--color-stars: #ffc756;
	--color-background-1: #fff;
	--color-background-2: #0001;
	--color-background-3: oklch(calc(var(--color-accent-1-l) + 0.47) calc(var(--color-accent-1-c) - 0.08) var(--color-accent-1-h));
	--color-background-4: oklch(calc(var(--color-accent-1-l) + 0.4) calc(var(--color-accent-1-c) - 0.05) var(--color-accent-1-h));
	--color-background-5: oklch(calc(var(--color-accent-2-l) + 0.34) calc(var(--color-accent-2-c) - 0.05) var(--color-accent-2-h));
	--color-background-modal: var(--color-background-1);
	--color-accent-1-l: 0.52;
	--color-accent-1-c: 0.091;
	--color-accent-1-h: 230;
	--color-accent-2-l: calc(var(--color-accent-1-l) + 0.125);
	--color-accent-2-c: calc(var(--color-accent-1-c) + 0.085);
	--color-accent-2-h: calc(var(--color-accent-1-h) - 204);
	--color-accent-1: oklch(var(--color-accent-1-l) var(--color-accent-1-c) var(--color-accent-1-h));
	--color-accent-2: oklch(var(--color-accent-2-l) var(--color-accent-2-c) var(--color-accent-2-h));
	--color-link-1: oklch(var(--color-accent-1-l) var(--color-accent-1-c) var(--color-accent-1-h));
	--color-link-1-hover: oklch(calc(var(--color-accent-1-l) - 0.15) var(--color-accent-1-c) var(--color-accent-1-h));
	--color-link-2: oklch(var(--color-accent-2-l) var(--color-accent-2-c) var(--color-accent-2-h));
	--color-link-2-hover: oklch(calc(var(--color-accent-2-l) - 0.15) var(--color-accent-2-c) var(--color-accent-2-h));
	--color-button-text: #fff;
	--font-1-family: Lato, sans-serif;
	--font-1-weight-normal: 400;
	--font-1-weight-bold: 700;
	--line-height-small: 1.1;
	--line-height-medium: 1.25;
	--line-height-large: 1.5;
	--shadow-1: 0 0.5rem 1rem oklch(calc(var(--color-accent-1-l) + 0) calc(var(--color-accent-1-c) - 0.05) var(--color-accent-1-h) / 0.75);
	--shadow-2: 0 0 1rem var(--color-background-1);
	--shadow-3: 0 0 0.5rem var(--color-text-2);
	--shadow-modal: var(--shadow-1);
	--gradient-1: linear-gradient(315deg, var(--color-background-1) 0%, var(--color-background-2) 100%);
	--border-width: 0.15rem;
	--outline-offset: calc(0.5 * var(--border-width));
	--stroke-width-icon: calc(0.6 * var(--border-width));
	--border-radius-small: 0.25rem;
	--border-radius-medium: 0.5rem;
	--border-radius-large: 1rem;
	--size-liquid-small: clamp(0.5rem, 3vw, 1rem);
	--size-liquid-medium: clamp(0.5rem, 5vw, 1.5rem);
	--size-liquid-large: clamp(0.5rem, 8vw, 4rem);
	--size-block-header: 8rem;
	--transition-speed-fast: 300ms;
	--transition-speed-medium: 500ms;
	--transition-speed-slow: 1500ms;
	--transition-timing-function-default: ease-in-out;
	--image-filter: none;
	--noise: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='n'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch' /%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23n)' /%3E%3C/svg%3E%0A");
	--icon-close: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' stroke-width='2' stroke='#333' fill='none' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M18 6l-12 12'%3E%3C/path%3E%3Cpath d='M6 6l12 12'%3E%3C/path%3E%3C/svg%3E");
	color: var(--color-text-1);
	color-scheme: only light;
}

::backdrop,
[data-theme="light"] ::backdrop {
	background-color: #dddb;
	backdrop-filter: blur(3px);
}

[data-theme="dark"] {
	--color-text-1: #bbb;
	--color-text-2: #888;
	--color-accent-1-l: 0.66;
	--color-accent-2-l: 0.6;

	--color-background-1: #000;
	--color-background-2: #fff3;
	--color-background-3: oklch(calc(var(--color-accent-1-l) - 0.42) calc(var(--color-accent-1-c) - 0.07) var(--color-accent-1-h));
	--color-background-4: oklch(calc(var(--color-accent-1-l) - 0.3) calc(var(--color-accent-1-c) - 0.05) var(--color-accent-1-h));
	--color-background-5: oklch(calc(var(--color-accent-2-l) - 0.35) calc(var(--color-accent-2-c) - 0.05) var(--color-accent-2-h));
	--color-background-modal: var(--color-background-3);

	--color-link-1: oklch(calc(var(--color-accent-1-l) - 0.15) var(--color-accent-1-c) var(--color-accent-1-h));
	--color-link-1-hover: oklch(var(--color-accent-1-l) var(--color-accent-1-c) var(--color-accent-1-h));

	--shadow-3: 0 0 0 0.075rem var(--color-background-2);
	--image-filter: brightness(0.8);
	--icon-close: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' stroke-width='2' stroke='#bbb' fill='none' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M18 6l-12 12'%3E%3C/path%3E%3Cpath d='M6 6l12 12'%3E%3C/path%3E%3C/svg%3E");
	color: var(--color-text-1);
	color-scheme: only dark;
}

[data-theme="dark"] ::backdrop {
	background-color: #111a;
}

[hidden] {
	display: none !important;
}

:focus {
	outline-offset: var(--outline-offset);
	z-index: 1;
}

.sr-only:not(:focus):not(:active):not(:focus-within) {
	clip: rect(0 0 0 0);
	clip-path: inset(50%);
	height: 1px;
	overflow: hidden;
	position: absolute;
	white-space: nowrap;
	width: 1px;
}

img,
svg {
	max-inline-size: 100%;
	block-size: auto;
	filter: var(--image-filter);
}

h1,
h2,
h3,
h4,
h5,
h6 {
	text-wrap: balance;
	font-family: var(--font-1-family);
	font-weight: var(--font-1-weight-bold);
	margin: 0;
}

a {
	color: var(--color-link-1);
	transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
}

a:focus,
a:hover {
	color: var(--color-link-1-hover);
}

p {
	margin: 0;
}

input,
textarea {
	font-family: inherit;
	font-size: inherit;
	font-weight: inherit;
	color: inherit;
	background-color: transparent;
	margin: 0;
}

input:not([type="checkbox"]):not([type="radio"]):not([type="file"]),
textarea {
	border: var(--border-width) solid currentColor;
	block-size: 2.5rem;
	border-radius: var(--border-radius-small);
	padding-inline: 0.4rem;
	display: flex;
	max-inline-size: 100%;
	inline-size: 100%;
}

input[type="search"]::-webkit-search-cancel-button {
	display: none;
}

textarea {
	block-size: 6rem;
}

input[type="checkbox"] {
	appearance: none;
	cursor: pointer;
	block-size: 1.8rem;
	inline-size: 1.8rem;
	display: flex;
	flex-shrink: 0;
	border: var(--border-width) solid currentColor;
	border-radius: var(--border-radius-small);
	align-items: center;
	justify-content: center;
}

input[type="checkbox"]:checked::before {
	content: "\2713";
	color: var(--color-accent-1);
	font-weight: var(--font-1-weight-bold);
	font-size: 1.4rem;
}

input[type="checkbox"].toggle {
	inline-size: 3.25rem;
	border-radius: 0.9rem;
	padding: 0.2rem;
	margin: 0;
	justify-content: start;
}

input[type="checkbox"].toggle::before {
	content: "";
	block-size: calc(1.6rem - 2 * var(--border-width));
	inline-size: calc(1.6rem - 2 * var(--border-width));
	background-color: currentColor;
	border-radius: 50%;
	transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
	flex-shrink: 0;
}

input[type="checkbox"].toggle:checked::before {
	background-color: var(--color-accent-1);
	margin-left: 1.25rem;
}

input[type="radio"] {
	appearance: none;
	cursor: pointer;
	block-size: 1.8rem;
	inline-size: 1.8rem;
	display: flex;
	flex-shrink: 0;
	border: var(--border-width) solid currentColor;
	border-radius: 50%;
	align-items: center;
	justify-content: center;
}

input[type="radio"]:checked::before {
	content: "";
	block-size: calc(1.6rem - 2 * var(--border-width));
	inline-size: calc(1.6rem - 2 * var(--border-width));
	background-color: var(--color-accent-1);
	border-radius: 50%;
	transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
	flex-shrink: 0;
}

button,
input[type="button"],
input[type="submit"],
input[type="reset"] {
	appearance: none;
	background: none;
	background-color: var(--color-link-1);
	border: none;
	border-radius: var(--border-radius-small);
	font-family: inherit;
	color: inherit;
	cursor: pointer;
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: inherit;
	transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
	color: var(--color-button-text);
	min-block-size: 3rem;
	padding-block: 0.25rem;
	padding-inline: 1rem;
	gap: 0.25rem;
}

button:focus,
button:hover,
input[type="button"]:focus,
input[type="button"]:hover,
input[type="reset"]:focus,
input[type="reset"]:hover,
input[type="submit"]:focus,
input[type="submit"]:hover {
	background-color: var(--color-link-1-hover);
}

button.outline,
input[type="button"].outline,
input[type="reset"].outline,
input[type="submit"].outline {
	background-color: transparent;
	color: var(--color-link-1);
	border: var(--border-width) solid currentColor;
}

button.outline:focus,
button.outline:hover,
input[type="button"].outline:focus,
input[type="button"].outline:hover,
input[type="reset"].outline:focus,
input[type="reset"].outline:hover,
input[type="submit"].outline:focus,
input[type="submit"].outline:hover {
	color: var(--color-link-1-hover);
	background-color: oklch(var(--color-accent-1-l) var(--color-accent-1-c) var(--color-accent-1-h) / 0.2);
}

button.secondary,
input[type="button"].secondary,
input[type="reset"].secondary,
input[type="submit"].secondary {
	background-color: var(--color-link-2);
	color: var(--color-text-2);
}

button.secondary:focus,
button.secondary:hover,
input[type="button"].secondary:focus,
input[type="button"].secondary:hover,
input[type="reset"].secondary:focus,
input[type="reset"].secondary:hover,
input[type="submit"].secondary:focus,
input[type="submit"].secondary:hover {
	background-color: var(--color-link-2-hover);
}

button.link {
	font-weight: var(--font-1-weight-normal);
	padding: 0;
	display: inline;
	inline-size: auto;
	min-block-size: 0;
	color: var(--color-link-1);
	border-radius: 0;
	border: none;
	background-color: transparent;
	text-align: inherit;
}

button.link:focus,
button.link:hover {
	text-decoration: underline;
}

button[disabled],
input[type="button"][disabled],
input[type="reset"][disabled],
input[type="submit"][disabled] {
	background-color: transparent;
	color: currentColor;
	cursor: not-allowed;
}

select {
	appearance: none;
	border: var(--border-width) solid currentColor;
	font-family: inherit;
	font-size: inherit;
	font-weight: inherit;
	color: inherit;
	border-radius: var(--border-radius-small);
	background-color: transparent;
	block-size: 3rem;
	padding-inline: 1rem 3rem;
	background-image: conic-gradient(from -40deg, currentColor 80deg, transparent 80deg);
	background-size: 1rem 1rem;
	background-repeat: no-repeat;
	background-position: calc(100% - 1rem) calc(50% + 0.25rem);
	margin-block: var(--margin-liquid-medium);
	cursor: pointer;
	display: flex;
	max-inline-size: 100%;
	inline-size: 100%;
}

select:focus {
	background-image: conic-gradient(from 140deg, currentColor 80deg, transparent 80deg);
	background-position: calc(100% - 1rem) calc(50% - 0.25rem);
}

label {
	cursor: pointer;
}

dialog[open] {
	border: none;
	align-items: flex-start;
	border-radius: var(--border-radius-medium);
	box-shadow: var(--shadow-1);
	max-inline-size: 100%;
	max-block-size: 100%;
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	color: inherit;
	background-color: var(--color-background-modal);
	overflow: auto;
	padding: 0;
	box-shadow: var(--shadow-modal);
	animation: var(--transition-speed-fast) var(--transition-timing-function-default) 0s backwards scale-up;
}

dialog[open].hiding {
	animation: var(--transition-speed-fast) var(--transition-timing-function-default) 0s backwards scale-down;
}

nav ul {
	padding: 0;
	margin: 0;
	list-style: none;
	display: flex;
}

nav ul a {
	color: currentColor;
	text-decoration: none;
}

svg.icon {
	stroke-width: var(--stroke-width-icon);
}

body {
	background-color: var(--color-background-1);
	font-family: var(--font-1-family);
	font-weight: var(--font-1-weight-normal);
	margin: 0;
	min-block-size: 100vh;
	line-height: var(--line-height-medium);
	accent-color: var(--color-accent-1);
	display: flex;
	flex-direction: column;
	overflow-x: clip;
}

body:has(dialog[open]) {
	overflow: clip;
}

header {
	display: grid;
	background-color: var(--color-background-1);
	max-inline-size: 100%;
	position: sticky;
	inset-block-start: 0;
	z-index: 1000;
}

header .discount {
	position: relative;
	background-color: var(--color-background-5);
	display: flex;
	align-items: center;
	justify-content: center;
	padding-block: 0.5rem;
	padding-inline: 3.5rem;
	text-align: center;
}

header .discount.hiding {
	animation: var(--transition-speed-medium) var(--transition-timing-function-default) 0s backwards hiding;
}

header .discount .close-button {
	inset-block-start: -0.4rem;
	inset-inline-end: 0;
}

.main-header {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	padding-inline: var(--size-liquid-medium);
	gap: 0 1.5rem;
	box-shadow: var(--shadow-3);
}

.logo-search {
	display: flex;
	align-items: center;
	gap: 0.5rem 1rem;
	padding-block: 0.75rem;
	flex-grow: 1000;
}

.logo-search:focus-within {
	flex-wrap: wrap;
}

.logo {
	display: flex;
	font-weight: var(--font-1-weight-bold);
	font-size: 1.5rem;
}

.search {
	position: relative;
	flex-grow: 1;
	flex-shrink: 1;
}

.search button {
	position: absolute;
	inset-block: 0;
	inset-inline-start: 0;
	margin-block: auto;
	color: currentColor;
	min-block-size: 2.5rem;
	inline-size: 2.5rem;
	border-radius: 100vmax;
	padding: 0.6rem;
	background-color: transparent;
}

.search #search {
	border: none;
	border-radius: 100vmax;
	background-color: var(--color-background-2);
	padding-inline-start: 2.5rem;
	block-size: 2.5rem;
	inline-size: 100%;
	max-inline-size: 15rem;
}

.search #search:focus {
	max-inline-size: 100%;
}

header nav,
header nav ul,
header nav li,
header nav a {
	display: flex;
}

header nav {
	margin-inline: -0.5rem;
	flex-grow: 1;
}

header nav ul {
	flex-wrap: wrap;
	justify-content: space-between;
	gap: 0.75rem;
	flex-grow: 1;
}

header nav a,
header nav button {
	padding: 0.5rem;
	align-items: center;
	justify-content: center;
	background-color: transparent;
	color: currentColor;
}

header nav button:focus,
header nav button:hover {
	background-color: transparent;
	color: var(--color-link-1-hover);
}

header nav .cart-quantity {
	background-color: var(--color-accent-2);
	font-size: 0.75rem;
	line-height: 1;
	color: var(--color-background-1);
	padding-inline: 0.25rem;
	padding-block: 0.2rem;
	border-radius: 100vmax;
	margin-block-start: -0.75rem;
	margin-inline-start: -0.75rem;
	z-index: 1;
}

main {
	border-radius: var(--border-radius-medium);
	max-inline-size: 100%;
	display: flex;
	flex-direction: column;
}

section {
	padding-block: var(--size-liquid-large);
	padding-inline: max(var(--size-liquid-medium), calc((100% - 70rem) / 2));
	align-self: start;
	inline-size: 100%;
}

section > h2,
section > p {
	text-align: center;
}

section > h2,
#giftcard h2 {
	margin-block-end: 2rem;
}

#benefits {
	background-color: var(--color-background-1);
	padding-block: 0.5rem;
}

#benefits ul {
	list-style: none;
	padding: 0;
	display: grid;
	grid-template-columns: 1fr;
	inline-size: 100%;
	gap: var(--size-liquid-medium);
}

@media (min-width: 40rem) {
	#benefits ul {
		grid-template-columns: 1fr 1fr 1fr;
	}
}

#benefits li {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	gap: 0.5rem;
	background-color: var(--color-background-5);
	padding: 0.75rem;
	border-radius: var(--border-radius-small);
}

#benefits li:nth-of-type(odd) {
	background-color: var(--color-background-4);
}

#benefits p {
	font-size: 0.9rem;
}

#benefits p strong {
	font-size: 1rem;
}

#benefits svg {
	color: var(--color-text-2);
	inline-size: 3rem;
}

#benefits svg path {
	stroke-width: 0.075rem;
}

#benefits div {
	display: flex;
	flex-direction: column;
	gap: 0.25rem 0.5rem;
	inline-size: 80%;
}

.products {
	list-style: none;
	padding: 0;
	margin: 0;
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));
	gap: var(--size-liquid-medium);
	max-inline-size: 100%;
	grid-template-rows: min-content;
	flex-grow: 1;
}

.products li,
.products > div {
	position: relative;
	display: grid;
	gap: 0.25rem;
	align-self: start;
	animation: var(--transition-speed-medium) var(--transition-timing-function-default) 0s backwards scale-up;
	max-inline-size: 100%;
}

.products li.hiding,
.products > div.hiding {
	animation: var(--transition-speed-medium) var(--transition-timing-function-default) 0s backwards scale-down;
}

.products .image {
	display: flex;
	align-items: center;
	justify-content: center;
	background-color: var(--color-background-3);
	position: relative;
	aspect-ratio: 1;
	padding-block: 2rem 2.5rem;
	overflow: hidden;
	inline-size: 100%;
	max-inline-size: 100%;
	border-radius: var(--border-radius-small);
	user-select: none;
	transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
}

.products .image img {
	block-size: 100%;
	inline-size: auto;
	max-inline-size: none;
	justify-self: center;
}

.products .image button.add-to-cart,
.products .image::after {
	position: absolute;
	inset-block-end: 0;
	inset-inline: 0;
	min-block-size: 2.25rem;
	inline-size: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 0.25rem;
}

.products .image::after {
	background-color: var(--color-background-4);
	color: var(--color-text-1);
	border-radius: var(--border-radius-small);
}

@media (any-pointer: fine) {
	.products .image button.add-to-cart {
		transform: translateY(100%);
	}
}

.products .in-cart .image::after {
	/* content: "Added to cart"; */
}

.products .product:focus-within .image button.add-to-cart,
.products .product:hover .image button {
	transform: translateY(0);
}

.products .product::before,
.products > div::before {
	position: absolute;
	inset-block-start: 0;
	inset-inline-start: 0;
	text-transform: uppercase;
	padding-block: 0.25rem;
	padding-inline: 0.5rem;
	color: var(--color-background-1);
	z-index: 2;
	border-radius: var(--border-radius-small);
}

.products .new::before {
	content: "new";
	background-color: var(--color-accent-1);
}

.products .discount::before {
	content: attr(data-discount);
	background-color: var(--color-accent-2);
}

.products .name {
	font-size: 0.9rem;
	font-weight: var(--font-1-weight-normal);
	text-transform: capitalize;
}

.products .price {
	font-weight: var(--font-1-weight-bold);
}

.products .price .old {
	color: var(--color-text-2);
	font-size: 0.8em;
	font-weight: var(--font-1-weight-normal);
	text-decoration: line-through;
}

.products .stars {
	color: var(--color-stars);
}

#featured {
	background-color: var(--color-background-3);
	display: flex;
	flex-direction: column;
	align-items: center;
	max-inline-size: 100%;
}

#featured nav {
	display: flex;
	max-inline-size: 100%;
}

#featured nav .products {
	grid-template-columns: repeat(auto-fill, minmax(7rem, 1fr));
	inline-size: 30rem;
	max-inline-size: 100%;
	margin-block: var(--size-liquid-large);
}

#featured nav button {
	padding: 0;
	aspect-ratio: 1;
	background-color: transparent;
}

#featured nav button[aria-pressed="true"]::before {
	content: "";
	position: absolute;
	inset: 0;
	z-index: 1;
	border-radius: var(--border-radius-small);
	box-shadow: inset 0 0 0 var(--border-width) var(--color-text-1);
}

#featured nav .new button[aria-pressed="true"]::before {
	box-shadow: inset 0 0 0 var(--border-width) var(--color-accent-1);
}

#featured nav .discount button[aria-pressed="true"]::before {
	box-shadow: inset 0 0 0 var(--border-width) var(--color-accent-2);
}

#featured nav img {
	inline-size: 40%;
	block-size: auto;
}

#featured .products.details {
	grid-template-columns: 1fr;
}

@media (min-width: 30rem) {
	#featured .products.details .product {
		grid-template-columns: auto 1fr;
	}
}

#featured #display .image {
	inline-size: 18rem;
	max-inline-size: 100%;
}

.stars svg {
	inline-size: 1.25rem;
}

.stars {
	margin-block: 0.5rem;
}

.products .description {
	color: var(--color-text-2);
	max-block-size: 5rem;
	overflow: hidden;
	text-overflow: ellipsis;
}

#featured .products .image {
	background-color: var(--color-background-1);
}

#faq > p:last-of-type {
	margin-block-end: var(--size-liquid-large);
}

.faq {
	margin: 0;
	padding: 0;
	list-style: none;
	display: grid;
	gap: 0.25rem;
}

.faq details {
	background-color: var(--color-background-3);
	border: var(--border-width) solid transparent;
	border-radius: var(--border-radius-medium);
	transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
}

.faq details[open] {
	background-color: transparent;
	border-color: var(--color-background-2);
}

.faq details > div {
	display: grid;
	grid-template-rows: 0fr;
	transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
	padding: var(--size-liquid-small);
	padding-block-start: 0;
}

.faq details > div > div {
	overflow: clip;
}

.faq summary {
	cursor: pointer;
	font-size: 1.1rem;
	font-weight: var(--font-1-weight-bold);
	display: flex;
	justify-content: space-between;
	gap: 0.5rem;
	padding: var(--size-liquid-small);
}

.faq summary::marker {
	content: "";
}

.faq summary svg {
	--stroke-width-icon: 2px;
	content: var(--icon-close);
	inline-size: 1.2em;
	block-size: 1.2em;
	display: flex;
	transform: rotate(-45deg);
	transition: all var(--transition-speed-fast) var(--transition-timing-function-default);
	flex-shrink: 0;
}

.faq details[open] summary svg {
	transform: rotate(0);
}

.faq details[open] > div {
	animation: var(--transition-speed-fast) var(--transition-timing-function-default) 0s both faq;
}

#newsletter {
	background-color: var(--color-accent-2);
	background: url("https://icodethis.com/images/iCodeMas/santa_slide.png") 7% 35% / 12rem no-repeat, url("https://icodethis.com/images/iCodeMas/subscribe_bg.png") 50% 100% / cover no-repeat;
	color: var(--color-background-1);
	display: flex;
	flex-direction: column;
	align-items: center;
}

#newsletter hgroup {
	max-inline-size: 30rem;
	text-align: center;
}

#newsletter h2 {
	margin-block-end: 0.5rem;
}

#newsletter form {
	display: flex;
	position: relative;
	block-size: 5rem;
	align-items: end;
	font-size: 0.9rem;
}

#newsletter input {
	background-color: var(--color-background-1);
	color: var(--color-text-1);
	border-color: transparent;
	inline-size: 100%;
	padding-inline-end: 5.5rem;
}

#newsletter input + label {
	position: absolute;
	transition: all var(--transition-speed-medium) var(--transition-timing-function-default);
	transform-origin: 0 50%;
	transform: translateY(-2rem);
	inset-inline-start: 0.5rem;
	inset-block-end: 0.65rem;
}

#newsletter input:placeholder-shown:not(:focus) + label {
	transform: translateY(0);
	color: var(--color-text-2);
}

#newsletter button {
	position: absolute;
	inset-block-end: 0;
	inset-inline-end: 0;
	min-block-size: 2.5rem;
	inline-size: 5rem;
	z-index: 3;
}

#shop {
	display: grid;
	grid-template-rows: auto 1fr;
	inline-size: 100%;
	gap: var(--size-liquid-medium);
}

#shop .cards {
	color: var(--color-background-1);
	display: grid;
	gap: var(--size-liquid-medium);
	grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
	margin-block-end: var(--size-liquid-medium);
}

#shop .card {
	display: flex;
	flex-direction: column;
	max-inline-size: 100%;
	overflow: clip;
}

#shop .card:first-of-type {
	background-color: var(--color-accent-1);
}

#shop .card:last-of-type {
	background-color: var(--color-accent-2);
}

#shop .card img {
	margin: 0;
	padding: 0;
	display: flex;
	justify-content: center;
	max-inline-size: 100%;
	transform-origin: 50% 100%;
	transition: transform var(--transition-speed-slow) var(--transition-timing-function-default);
}

#shop .card:focus-within img,
#shop .card:hover img {
	transform: scale(1.1);
}

#shop .card div {
	display: flex;
	padding: 1rem;
	gap: 1rem;
	align-items: center;
	flex-wrap: wrap;
	justify-content: space-between;
}

#shop .card hgroup {
	display: flex;
	flex-direction: column;
	gap: 0.25rem;
}

#shop .card hgroup p {
	margin: 0;
	font-size: 0.85rem;
}

#shop .card button {
	color: var(--color-text-1);
	background-color: var(--color-background-1);
	min-inline-size: 3rem;
	padding-inline: 0.75rem;
}

#shop .card:first-of-type button:focus,
#shop .card:first-of-type button:hover {
	background-color: var(--color-background-4);
}

#shop .card:last-of-type button:focus,
#shop .card:last-of-type button:hover {
	background-color: var(--color-background-5);
}

.pagination:empty {
	display: none;
}

.pagination {
	display: grid;
	grid-template-columns: 1fr auto 1fr;
	gap: var(--size-liquid-medium);
	justify-content: center;
	align-items: center;
}

.pagination div {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	gap: 0.25rem;
}

.pagination button {
	inline-size: 3rem;
	block-size: 3rem;
	background-color: transparent;
	color: currentColor;
	padding: 0.25rem;
}

.pagination button[disabled] {
	opacity: 0.4;
}

.pagination button.previous {
	justify-self: end;
}

.pagination button.previous,
.pagination button.next {
	background-color: var(--color-background-2);
	border-radius: 1.5rem;
}

.pagination button:not([disabled]):focus,
.pagination button:not([disabled]):hover {
	background-color: var(--color-background-2);
}

.pagination button[aria-pressed="true"] {
	background-color: var(--color-background-4);
}

.products-options {
	display: flex;
	flex-wrap: wrap;
	gap: 1rem;
	justify-content: end;
}

.products-display-buttons {
	display: flex;
	gap: 0.5rem;
}

.products-display-buttons button {
	inline-size: 3rem;
	padding-inline: 0.25rem;
}

.products-display-buttons button[aria-pressed="true"] {
	background-color: var(--color-link-2);
}

#shop #sortby-wrapper {
	display: flex;
	justify-content: end;
	align-items: center;
	gap: 1rem;
	flex-wrap: wrap;
}

#sortby {
	inline-size: max-content;
}

#products,
#results {
	max-inline-size: none;
	display: flex;
	flex-direction: row-reverse;
	align-self: start;
}

.products-pagination {
	display: flex;
	flex-direction: column;
	gap: 1rem;
	inline-size: 100%;
}

.products.list .stars,
.products.grid .stars,
.products.list .description,
.products.grid .description,
.products.list .image .add-to-cart,
.products.grid .name-price-description .add-to-cart,
.products.details .image .add-to-cart {
	display: none;
}

.products.list {
	grid-template-columns: 1fr;
	grid-template-rows: repeat(auto-fill, minmax(3rem, 1fr));
	gap: 0.5rem;
	align-self: start;
	inline-size: 100%;
}

.products.list .product {
	grid-template-columns: 1fr 20fr;
	grid-template-rows: auto;
	align-items: center;
	justify-content: start;
	gap: 0.5rem;
}

.products.list .image {
	inline-size: 3rem;
	block-size: 3rem;
	padding-block: 0.6rem;
	border: var(--border-width) solid transparent;
}

.products.list .new .image {
	border-color: var(--color-accent-1);
}

.products.list .discount .image {
	border-color: var(--color-accent-2);
}

.products.list .product::before,
.products.list .image::after {
	display: none;
}

.products.list .name-price-description {
	display: grid;
	grid-template-columns: 12fr 3fr 1fr;
	align-items: center;
	gap: 0.5rem;
}

.products.list .name,
.products.details .name {
	font-size: 1rem;
}

.products.list .add-to-cart {
	inline-size: 3rem;
	padding-inline: 0.25rem;
	justify-self: end;
}

.products.list .add-to-cart span {
	display: none;
}

.products.details {
	grid-template-columns: repeat(auto-fill, minmax(min(100%, 25rem), 1fr));
}

.products.details .product {
	display: grid;
	grid-template-columns: 1fr;
	gap: 0.75rem;
}

.products.details .name-price-description {
	display: grid;
	grid-template-rows: auto auto auto auto 1fr;
}

.products.details .name-price-description .add-to-cart {
	align-self: end;
	inline-size: fit-content;
	margin-block-start: 0.5rem;
}

@media (min-width: 30rem) {
	.products.details .product {
		grid-template-columns: 1fr 1fr;
	}
}

#resluts .products.details .name-price-description {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	gap: 0.5rem;
	animation: var(--transition-speed-medium) var(--transition-timing-function-default) 0s backwards scale-up;
	flex-grow: 1;
	max-inline-size: 100%;
}

#results li {
	animation: none;
}

#filters {
	position: fixed;
	inset-block-start: var(--size-block-header);
	inset-block-end: 0;
	inset-inline-start: 0;
	z-index: 699;
	background-color: var(--color-background-1);
	display: flex;
	align-items: center;
	justify-content: start;
	transition: transform var(--transition-speed-fast) var(--transition-timing-function-default), box-shadow var(--transition-speed-fast) var(--transition-timing-function-default);
	box-shadow: var(--shadow-3);
}

@media (min-width: 40rem) {
	#filters {
		transform: translateX(calc(-1 * var(--size-liquid-medium))) !important;
		position: static;
		align-items: start;
		background-color: transparent;
		box-shadow: none;
		z-index: 700;
	}
}

#filters[aria-expanded="false"] {
	transform: translateX(-100%);
	box-shadow: none;
}

#filters button.filters-button {
	transform: translateX(3.5rem) rotate(-90deg);
	block-size: 2rem;
	padding-block: 0;
	position: absolute;
	inset-block: 0;
	inset-inline-end: 0;
	margin-block: auto;
}

#filters button.close-button {
	z-index: 1;
}

@media (min-width: 40rem) {
	#filters button {
		display: none;
	}
}

#filters form {
	display: flex;
	gap: 1.5rem;
	margin: 0;
	flex-direction: column;
	position: relative;
	padding-block: 0.5rem;
	padding-inline: var(--size-liquid-medium);
	padding-inline-end: 2.5rem;
	align-self: start;
	overflow-y: auto;
	overflow-x: clip;
	max-block-size: 100%;
}

@media (min-width: 40rem) {
	#filters form {
		padding-inline-end: var(--size-liquid-medium);
		position: sticky;
		inset-block-start: var(--size-block-header);
		max-block-size: calc(100vh - var(--size-block-header) - 3.5rem);
	}
}

#filters fieldset {
	margin: 0;
	padding: 0;
	border: none;
	display: flex;
	flex-direction: column;
	gap: 0.75rem;
}

#filters legend,
#filters span {
	text-transform: capitalize;
}

#filters legend {
	padding: 0;
	margin-block-end: 0.5rem;
}

#filters label {
	display: flex;
	align-items: center;
	gap: 0.5rem;
}

#cart {
	background-color: var(--color-background-1);
	display: grid;
	grid-template-rows: auto auto 1fr auto;
	transition: transform var(--transition-speed-fast) var(--transition-timing-function-default), box-shadow var(--transition-speed-fast) var(--transition-timing-function-default);
	position: fixed;
	z-index: 999;
	inset-block-start: var(--size-block-header);
	inset-block-end: 0;
	inset-inline-end: 0;
	max-inline-size: 100%;
	min-inline-size: 16rem;
	box-shadow: var(--shadow-3);
}

#cart[aria-expanded="false"] {
	box-shadow: none;
	transform: translateX(100%);
}

#cart h2 {
	font-size: 1rem;
	font-weight: var(--font-1-weight-normal);
	padding: var(--size-liquid-medium);
}

#cart .products {
	grid-template-columns: 1fr;
	overflow-y: auto;
}

#cart .products:empty::before {
	content: "Cart is empty";
	display: flex;
	justify-content: center;
	padding: var(--size-liquid-medium);
	color: var(--color-text-2);
}

#cart .products:empty + .subtotal-checkout-button {
	display: none !important;
}

#cart li {
	display: flex;
	gap: 1rem;
	border-block-end: 1px solid var(--color-background-2);
	padding-block-end: 1rem;
	padding-inline: var(--size-liquid-medium);
}

#cart .image {
	inline-size: 3rem;
	block-size: 3rem;
	padding-block: 0.6rem;
}

#cart .image::before,
#cart .image::after {
	display: none;
}

#cart .name-price-quantity {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	inline-size: 100%;
}

#cart .price {
	color: var(--color-text-2);
	font-size: 0.9rem;
	display: flex;
	justify-content: space-between;
}

#cart fieldset,
#giftcard fieldset {
	border: none;
	margin: 0;
	padding: 0;
	display: flex;
}

#cart fieldset button,
#giftcard-value button {
	inline-size: 3rem;
}

#cart input,
#giftcard-value input {
	-moz-appearance: textfield;
	border-radius: 0;
	block-size: 3rem;
	inline-size: 3rem;
	text-align: center;
	border-inline: none;
	padding-inline: 0.25rem;
	border-color: var(--color-background-2);
}

#cart input::-webkit-outer-spin-button,
#cart input::-webkit-inner-spin-button {
	-webkit-appearance: none;
	margin: 0;
}

#cart .subtotal-checkout-button {
	display: flex;
	flex-direction: column;
	justify-content: end;
}

#cart dl {
	display: flex;
	gap: 1rem;
	justify-content: space-between;
	padding-block: 1rem;
	padding-inline: var(--size-liquid-medium);
	border-block: 1px solid var(--color-background-2);
}

#cart dt,
#cart dd {
	margin: 0;
}

#cart .checkout-button {
	margin-inline: var(--size-liquid-medium);
	margin-block-end: var(--size-liquid-medium);
}

#giftcard {
	z-index: 9999;
	padding: var(--size-liquid-large);
	padding-block-start: 4rem;
	overflow: visible;
	inline-size: 40rem;
}

#giftcard hgroup {
	text-align: center;
}

#giftcard form {
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: 2rem;
}

#giftcard form::before {
	content: "";
	position: absolute;
	background-image: url("https://icodethis.com/images/iCodeMas/gift.png");
	background-size: contain;
	background-repeat: no-repeat;
	block-size: 6rem;
	inline-size: 6rem;
	inset-block-start: 0;
	inset-inline-start: 0;
	transform: translate(-25%, -25%);
}

#giftcard-value input {
	inline-size: 4rem;
}

#giftcard #giftcard-options {
	display: grid;
	grid-template-columns: 1fr 1fr 1fr;
	grid-template-rows: 1fr 1fr;
	gap: 1rem;
	inline-size: 100%;
}

#giftcard-options button {
	background-color: transparent;
	color: currentColor;
	border: var(--border-width) solid var(--color-background-2);
}

#giftcard-options button[aria-pressed="true"] {
	border-color: var(--color-link-1);
}

.chat[aria-expanded="false"] {
	display: none;
}

.chat[aria-expanded="true"] {
	position: fixed;
	inset-block-end: 0.5rem;
	inset-inline-end: 0.5rem;
	margin-inline-start: 0.5rem;
	max-inline-size: 19rem;
	background-color: var(--color-background-1);
	animation: var(--transition-speed-medium) var(--transition-timing-function-default) 0s backwards scale-up;
	transform-origin: 100% 100%;
	border-radius: var(--border-radius-medium);
	overflow: hidden;
	box-shadow: var(--shadow-1);
	filter: brightness(0.9);
	transition: filter var(--transition-speed-medium) var(--transition-timing-function-default);
	z-index: 701;
}

.chat:focus-within,
.chat:hover {
	filter: none;
}

.chat.hiding {
	animation: var(--transition-speed-medium) var(--transition-timing-function-default) 0s backwards scale-down;
}

.chat .close-button {
	color: var(--color-background-1);
	inset-block-start: 0;
	inset-inline-end: 0;
}

.chat .close-button:focus-visible,
.chat .close-button:hover {
	color: var(--color-link-1-hover);
	background-color: var(--color-background-1);
}

.chat hgroup {
	background-color: var(--color-accent-1);
	color: var(--color-background-1);
	padding-block: 0.75rem;
	padding-inline: 1rem;
	text-align: center;
	transition: filter var(--transition-speed-medium) var(--transition-timing-function-default);
}

.chat:focus-within hgroup,
.chat:hover hgroup {
	filter: none;
}

.chat hgroup h2 {
	font-size: 1.25rem;
}

.chat hgroup p {
	display: none;
	font-size: 0.9rem;
	opacity: 0.75;
	margin-block-start: 0.5rem;
}

.chat.intro hgroup p {
	display: flex;
}

.chat .all-messages {
	padding: 1rem;
	display: flex;
	flex-direction: column;
	gap: 1rem;
	max-block-size: calc(90vh - 13rem);
	overflow-y: auto;
}

.chat .avatar-messages-group {
	display: flex;
	gap: 1rem;
}

.chat .avatar {
	display: flex;
	align-items: end;
}

.chat .avatar img,
.chat .avatar svg {
	inline-size: 3rem;
}

.chat .avatar:empty {
	display: none;
}

.chat .messages {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	inline-size: 100%;
}

.chat [data-user-id="1"] .messages {
	align-items: end;
}

.chat .messages p {
	padding-block: 0.5rem;
	padding-inline: 0.75rem;
	inline-size: fit-content;
	font-size: 0.9rem;
	flex-shrink: 1;
	border-radius: 0.75rem;
	position: relative;
}

.chat .messages p:last-of-type::before {
	content: "";
	position: absolute;
	block-size: 1rem;
	inline-size: 0.5rem;
	inset-block-end: 0.5rem;
	background-color: inherit;
	inset-inline-start: -0.5rem;
	clip-path: polygon(0 100%, 100% 0, 100% 75%);
}

.chat [data-user-id="2"] .messages p {
	background-color: var(--color-background-2);
}

.chat [data-user-id="1"] .messages p {
	background-color: var(--color-background-4);
}

.chat [data-user-id="1"] .messages p:last-of-type::before {
	inset-inline-start: unset;
	inset-inline-end: -0.5rem;
	clip-path: polygon(0 0, 100% 100%, 0 75%);
}

.chat .messages small.when {
	font-size: 0.8rem;
	color: var(--color-text-2);
	margin-block-end: 0.5rem;
}

.chat .avatar-messages-group.user-me {
	flex-direction: row-reverse;
}

.chat .new-message {
	position: relative;
	border-block-start: 1px solid var(--color-background-2);
}

.chat .new-message input {
	border-radius: 0 !important;
	border-end-start-radius: var(--border-radius-medium) !important;
	border-end-end-radius: var(--border-radius-medium) !important;
	border: none !important;
	padding-inline-end: 3.5rem !important;
}

.chat .new-message input:focus {
	outline-offset: -0.1rem;
}

.chat .new-message .send-message {
	position: absolute;
	inset-block-end: 0;
	inset-inline-end: 0;
	background-color: transparent;
	color: var(--color-link-1);
	min-block-size: 2.5rem;
}

.chat .new-message .send-message:focus,
.chat .new-message .send-message:hover {
	color: var(--color-link-1-hover);
}

#checkout {
	inline-size: 41rem;
	max-block-size: calc(100vh - 2rem);
}

#checkout form {
	padding-block: var(--size-liquid-medium);
	padding-inline: var(--size-liquid-large);
	display: flex;
	flex-direction: column;
	gap: 1rem;
}

#checkout fieldset {
	border: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	gap: 1rem;
}

#checkout legend {
	font-size: 1.1rem;
	font-weight: var(--font-1-weight-bold);
	padding: 0;
	margin-block-end: 1rem;
}

#checkout div:has([required]) label::after {
	content: " *";
	color: var(--color-accent-2);
}

#checkout div:has([required]) label:hover::after {
	content: " * required field";
}

#checkout .payment-method svg {
	inline-size: 2.75rem;
	stroke-width: 0.065rem;
}

#checkout .payment-method,
#feedback fieldset {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	gap: 1rem;
	margin: 0;
	padding: 0;
	border: none;
	flex-wrap: wrap;
}

#checkout .payment-method div,
#feedback fieldset div {
	display: flex;
	flex-direction: column;
	align-items: center;
	flex-grow: 1;
}

#checkout .payment-method input,
#feedback fieldset input {
	clip: rect(0 0 0 0);
	clip-path: inset(50%);
	height: 1px;
	overflow: hidden;
	position: absolute;
	white-space: nowrap;
	width: 1px;
}

#checkout .payment-method label,
#feedback fieldset label {
	display: flex;
	flex-direction: column;
	align-items: center;
	inline-size: 100%;
	padding: 0.5rem;
	border-radius: var(--border-radius-medium);
	border: var(--border-width) solid var(--color-background-2);
	color: var(--color-text-2);
}

#checkout .payment-method input:checked + label,
#feedback fieldset input:checked + label {
	border-color: var(--color-accent-1);
	color: var(--color-text-1);
}

#checkout .payment-method input:focus-visible + label,
#feedback fieldset input:focus-visible + label {
	outline: var(--border-width) solid var(--color-accent-1);
	outline-offset: var(--outline-offset);
}

#feedback label svg {
	inline-size: 4rem;
	stroke-width: 0.05rem;
}

#checkout input:not([type="radio"]) {
	border-color: var(--color-text-2);
}

#checkout .columns {
	display: flex;
	gap: 1rem;
	inline-size: 100%;
}

#checkout .columns div {
	inline-size: 100%;
}

#checkout #cash-details {
	display: flex;
	text-align: center;
	justify-content: center;
	align-items: center;
	min-block-size: 8.5rem;
}

#checkout button.order-button,
#feedback .send-feedback-button {
	inline-size: fit-content;
	align-self: center;
	margin-block-start: 1rem;
}

#thankyou[open] {
	background-color: transparent;
	display: flex;
	flex-direction: column;
	gap: 1rem;
	box-shadow: none;
	padding: 1rem;
	padding-block-end: 1.5rem;
	animation: none;
}

#thankyou.hiding {
	animation: var(--transition-speed-fast) var(--transition-timing-function-default) 0s backwards scale-down;
}

#thankyou canvas {
	position: fixed;
	width: 100%;
	height: 100%;
	top: 0px;
	left: 0px;
	z-index: 1000;
	pointer-events: none;
}

#thankyou div,
#thankyou form {
	background-color: var(--color-background-modal);
	box-shadow: var(--shadow-1);
	display: flex;
	align-items: center;
	gap: 1rem;
	inline-size: 100%;
	border-radius: var(--border-radius-medium);
}

#thankyou .thankyou {
	flex-direction: column;
	text-align: center;
	padding: var(--size-liquid-large);
}

#thankyou .feedback-section {
	padding: var(--size-liquid-medium);
	justify-content: space-evenly;
	flex-wrap: wrap;
}

#thankyou p {
	max-inline-size: 34rem;
}

#thankyou .close-button {
	inset-block-start: 1rem;
	inset-inline-end: 1rem;
}

#feedback {
	max-inline-size: 41rem;
}

#feedback form,
#thankyou-feedback form,
#thankyou-newsletter form {
	padding: var(--size-liquid-large);
	display: flex;
	flex-direction: column;
	gap: 1rem;
}

#feedback hgroup,
#thankyou-feedback hgroup,
#thankyou-newsletter hgroup {
	text-align: center;
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}

#feedback textarea {
	padding-inline: 0.4rem;
}

#feedback label svg {
	inline-size: 4rem;
	stroke-width: 0.05rem;
}

#results {
	z-index: 2;
	display: flex;
	flex-direction: column;
	gap: 1rem;
	position: relative;
}

#results h3:not(:first-of-type) {
	margin-block-start: 2rem;
}

.search-close-button {
	position: absolute;
	inset-inline-end: var(--size-liquid-medium);
}

#footer {
	color: #eee;
	text-shadow: 0 0 0.25rem #000;
	background-color: var(--color-accent-1);
	background: url("https://icodethis.com/images/iCodeMas/trees.png") 100% 100% / 12rem no-repeat, url("https://icodethis.com/images/iCodeMas/footer_bg.png") 50% 100% / cover no-repeat;
	filter: var(--image-filter);
	padding: var(--size-liquid-medium);
	padding-block: 4rem;
	display: flex;
	flex-direction: column;
	gap: 2rem;
}

#footer .logo-text-menu {
	display: flex;
	gap: 2rem 1rem;
	flex-wrap: wrap;
}

#footer .logo-text {
	display: flex;
	flex-direction: column;
	gap: 1rem;
	inline-size: 20rem;
	max-inline-size: 100%;
}

#footer nav {
	display: flex;
	flex-wrap: wrap;
	gap: 1rem 2rem;
	flex-grow: 1;
	justify-content: space-evenly;
}

#footer nav h2 {
	font-size: 1.1rem;
	margin-block-end: 0.5rem;
}

#footer nav ul {
	display: flex;
	flex-direction: column;
}

#footer nav a {
	display: flex;
	padding-block: 0.5rem;
}

#footer nav a:focus,
#footer nav a:hover {
	color: #fff;
	text-shadow: 0 0 0.25rem #fff8;
}

#settings-modal {
	background-color: var(--color-background-modal);
	border: none;
	inline-size: 23rem;
}

#settings-modal form {
	padding: var(--size-liquid-medium);
	position: relative;
	display: flex;
	flex-direction: column;
}

#settings-modal p {
	margin: 0;
	text-transform: capitalize;
}

#settings-modal label {
	display: block;
	margin-block: 1rem 0.25rem;
	text-transform: capitalize;
}

.chat-open-button,
.settings-open-button {
	inline-size: auto;
	block-size: auto;
	color: inherit;
	position: fixed;
	inset-block-end: 0.5rem;
	inset-inline-start: 0.5rem;
	block-size: 3rem;
	min-inline-size: 3rem;
	padding-inline: 0.75rem;
	background-color: var(--color-background-1);
	border: 0 solid currentColor;
	z-index: 700;
}

.chat-open-button {
	inset-inline-start: unset;
	inset-inline-end: 0.5rem;
}

.chat[aria-expanded="true"] + .chat-open-button {
	display: none;
}

.chat-open-button:focus,
.chat-open-button:hover,
.settings-open-button:focus,
.settings-open-button:hover {
	border-width: var(--border-width);
	background-color: var(--color-background-1);
}

.chat-open-button span,
.settings-open-button span {
	padding-inline-start: 0.25rem;
	text-transform: capitalize;
}

.chat-open-button svg,
.settings-open-button svg,
.close-button svg {
	inline-size: 1.5rem;
	block-size: auto;
}

.chat-open-button:not(:hover):not(:focus):not(:active):not(:focus-within) span,
.settings-open-button:not(:hover):not(:focus):not(:active):not(:focus-within) span,
.close-button span {
	clip: rect(0 0 0 0);
	clip-path: inset(50%);
	height: 1px;
	overflow: hidden;
	position: absolute;
	white-space: nowrap;
	width: 1px;
}

.close-button {
	color: inherit;
	position: absolute;
	inset-block-start: 0.25rem;
	inset-inline-end: 0.25rem;
	inline-size: 3rem;
	block-size: 3rem;
	border-radius: 100vmax;
	background-color: transparent;
	padding: 0;
}

.close-button:focus,
.close-button:hover {
	color: var(--color-background-modal);
}

#settings-hue-wrapper {
	display: flex;
}

#settings-hue {
	-webkit-appearance: none;
	background-image: linear-gradient(to right, oklch(var(--color-accent-1-l) var(--color-accent-1-c) 0), oklch(var(--color-accent-1-l) var(--color-accent-1-c) 90), oklch(var(--color-accent-1-l) var(--color-accent-1-c) 180), oklch(var(--color-accent-1-l) var(--color-accent-1-c) 270), oklch(var(--color-accent-1-l) var(--color-accent-1-c) 360));
	block-size: 1.8rem;
	color: inherit;
	border-radius: var(--border-radius-small);
	max-inline-size: 100%;
	inline-size: 17.5rem;
	margin-inline: 0;
	cursor: crosshair;
	display: flex;
	border: none;
	padding: 0;
}

#settings-hue::-moz-range-thumb {
	border: 0.15rem solid currentColor;
	height: 1.8rem;
	width: var(--border-radius-small);
	border-radius: 1rem;
	background: transparent;
	cursor: pointer;
	box-sizing: content-box;
}

#settings-hue::-webkit-slider-thumb {
	border: var(--border-width) solid currentColor;
	height: 1.8rem;
	width: var(--border-width);
	border-radius: 1rem;
	background: transparent;
	cursor: pointer;
	-webkit-appearance: none;
	box-sizing: content-box;
}

#settings-hue::-ms-thumb {
	border: var(--border-width) solid currentColor;
	height: 1.8rem;
	width: var(--border-width);
	border-radius: 1rem;
	background: transparent;
	cursor: pointer;
	box-sizing: content-box;
}

#settings-hue-preview {
	display: flex;
	inline-size: 2rem;
	block-size: 2rem;
	background-color: var(--color-accent-1);
	border-radius: var(--border-radius-largest);
	margin-inline-end: 0.25rem;
}

@keyframes hiding {
	from {
		overflow: hidden;
		max-block-size: var(--block-size, 100%);
		min-block-size: 0;
	}
	to {
		overflow: hidden;
		max-block-size: 0;
		min-block-size: 0;
		margin-block: 0;
		padding: 0;
	}
}

@keyframes add-to-cart {
	0% {
		transform: translate(var(--position-start)) scale(1);
	}
	15% {
		transform: translate(var(--position-start)) scale(1.2);
	}
	85% {
		transform: translate(var(--position-end)) scale(var(--delta-scale));
	}
	100% {
		transform: translate(var(--position-end)) scale(0.05);
	}
}

@keyframes faq {
	from {
		grid-template-rows: 0fr;
	}
	to {
		grid-template-rows: 1fr;
	}
}

@keyframes scale-up {
	from {
		opacity: 0;
		transform: scale(0);
	}
	to {
		opacity: 1;
		transform: scale(1);
	}
}

@keyframes scale-down {
	from {
		opacity: 1;
		transform: scale(1);
	}
	to {
		opacity: 0;
		transform: scale(0);
	}
}

@keyframes fade-in {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes from-top {
	from {
		transform: translateY(-100vh);
	}
	to {
		transform: translateY(0);
	}
}

@keyframes from-bottom {
	from {
		transform: translateY(100vh);
	}
	to {
		transform: translateY(0);
	}
}

@keyframes from-left {
	from {
		transform: translateX(-100vw);
	}
	to {
		transform: translateX(0);
	}
}

@keyframes from-right {
	from {
		transform: translateX(100vw);
	}
	to {
		transform: translateX(0);
	}
}

@media (min-width: 40rem) {
}
